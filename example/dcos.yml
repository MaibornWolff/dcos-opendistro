# This example is intended to be used with minio and after running "dcosdev up" (see README.md) for elastic and kibana

variables:
  s3_endpoint:
    env: MINIO_HOST
    required: True
  s3_bucket: artifacts
  s3_access_key:
    env: MINIO_ACCESS_KEY
    required: True
  s3_secret_key:
    env: MINIO_SECRET_KEY
    required: True
  s3_base_path: http://minio.marathon.l4lb.thisdcos.directory:9000/artifacts
  package_version: snapshot


opendistro-repo:
  type: repository
  name: opendistro
  uri: "{{s3_base_path}}/opendistro/opendistro-repo.json"

opendistro-kibana-repo:
  type: repository
  name: opendistro-kibana
  uri: "{{s3_base_path}}/opendistro-kibana/opendistro-kibana-repo.json"


elastic-principal:
  type: serviceaccount
  name: elastic-principal
  secret: elastic-principal
  groups:
    - superusers


securityconfig:
  type: s3file
  source: securityconfig
  compress: zip
  server:
    endpoint: "{{s3_endpoint}}"
    access_key: "{{s3_access_key}}"
    secret_key: "{{s3_secret_key}}"
    secure: true
    ssl_verify: false
  destination:
    bucket: "{{s3_bucket}}"
    key: "securityconfig.zip"


elastic:
  type: framework
  package:
    name: opendistro
    version: "{{package_version}}"
    options: "options-elastic.json"
  dependencies:
    - opendistro-repo
    - elastic-principal
    - securityconfig


kibana-username:
  type: secret
  path: kibana/username
  value: "kibana"

kibana-password:
  type: secret
  path: kibana/password
  value: "kibanaserver"


kibana:
  type: framework
  package:
    name: opendistro-kibana
    version: "{{package_version}}"
    options: "options-kibana.json"
  dependencies:
    - opendistro-kibana-repo
    - kibana-username:update
    - kibana-password:update
    - elastic